setwd("~/GitHubStuff/teaching-statistics/jasp-gifs/")
files <- list.files(full.names = FALSE, pattern = "\\gif", recursive = T)
lectures <- data.frame()
n <- length(files)
files <- files[order(as.numeric(gsub("\\..*", "", files)))]
getComment <- function(item = "") {
if (item == "ANOVA_SetUp+DescriptivePlotCI.gif") {
comment <- ""
} else {
comment <- ""
}
return(comment)
}
i <- 1
lectures[i ,'url'] <- data.frame(url = paste0(getwd(), files[i]))
lectures[i ,'title'] <- data.frame(title = files[i])
lectures[i ,'analysis'] <- data.frame(analysis = gsub("\\_.*", "", files[i] ))
lectures
files
for (i in 1:n) {
lectures[i ,'url'] <- data.frame(url = paste0(getwd(), files[i]))
lectures[i ,'title'] <- data.frame(title = files[i])
lectures[i ,'analysis'] <- data.frame(analysis = gsub("\\_.*", "", files[i] ))
myComment <- getComment(files[i])
# lectures[i ,'comment'] <- data.frame(comment = myComment)
topicName <- sub("^[^_]*_(.*)\\..*$", "\\1", files[i])
lectures[i ,'topic'] <- data.frame(topic = gsub(x = topicName, pattern = "_", replace = ""))
}
lectures
data.frame(Analysis = lectures$analysis,
Topic = lectures$topic,
# Comment = lectures$comment,
Link  = sprintf('<a href="https://johnnydoorn.github.io/statistics-lectures/courses/SSR/SSR_2023-2024/MiscFiles_J/JASP_Gifs/%s" target="_blank" class="external">link</a>',
gsub("qmd", "slide.html", lectures$title))
) -> lecture.list
baseURL <-
data.frame(Analysis = lectures$analysis,
Topic = lectures$topic,
# Comment = lectures$comment,
Link  = sprintf('<a href="https://johnnydoorn.github.io/statistics-lectures/courses/SSR/SSR_2023-2024/MiscFiles_J/JASP_Gifs/%s" target="_blank" class="external">link</a>',
gsub("qmd", "slide.html", lectures$title))
) -> lecture.list
lecture.list
View(lecture.list)
baseURL <-
data.frame(Analysis = lectures$analysis,
Topic = lectures$topic,
# Comment = lectures$comment,
Link  = sprintf('<a>href="https://johnnydoorn.github.io/teaching-statistics/jasp-gifs/%s" target="_blank" class="external">link</a>',
gsub("qmd", "slide.html", lectures$title))
) -> lecture.list
View(lecture.list)
baseURL <-
data.frame(Analysis = lectures$analysis,
Topic = lectures$topic,
# Comment = lectures$comment,
Link  = sprintf('<a>href="https://johnnydoorn.github.io/teaching-statistics/jasp-gifs/%s" target="_blank" class="external">link</a>',
gsub("qmd", "slide.html", lectures$title))
)
lecture.list <- baseURL
gsub("qmd", "slide.html", lectures$title)
Link = sprintf('<a href="https://johnnydoorn.github.io/teaching-statistics/jasp-gifs/%s" target="_blank" class="external">link</a>',
gsub("qmd", "slide.html", lectures$title))
gsub("qmd", "slide.html", lectures$title)
lectures$title
sprintf
?sprintf
install.packages(c("backports", "blavaan", "emmeans", "ggsci", "highr", "Hmisc", "KernSmooth", "knitr", "minqa", "mvtnorm", "pspline", "quantreg", "rcompanion", "restriktor", "SparseM", "StanHeaders", "survival", "textshaping", "urca", "vegan"))
?kable_styling
library('kableExtra')
?kable_styling
x_html <- knitr::kable(head(mtcars), "html")
x_html
kable_styling(x_html, "striped", position = "left", font_size = 7)
# Load necessary libraries
library(knitr)
source("../r_docs/dsur_themes.R")
source("../r_docs/useful_functions.R")
use_packages("ggplot2", "tibble", "kableExtra", "knitr", "haven", "forcats", "dplyr", "tidyr")
dataPath <- "../repository/dsj1_data/data"
files <- list.files(path = dataPath)
files
resultsFound <- list.files(full.names = FALSE, pattern = "\\jasp", recursive = FALSE,
path = "../repository/dsj1_data/results")
resultsFound
titles
titles <- gsub(files, pattern = "_data.jasp", replacement = "")
titles
htmlFiles
htmlFound <- list.files(full.names = FALSE, pattern = "\\html", recursive = FALSE,
path = "../repository/dsj1_data/html")
htmlFiles <- gsub(x = titles, pattern = ".jasp", replacement = ".html")
htmlFound
htmlFiles
paste0(titles, ".html")
paste0(titles, ".html") %in% htmlFound
jaspLinksResults[!(paste0(titles, ".jasp") %in% resultsFound)] <- "-"
jaspLinksResults
jaspLinksResults <- sprintf('<a href="../repository/dsj1_data/results/%s.jasp" target="_blank" class="external">link</a>',titles)
htmlLinksResults <- sprintf('<a href="../repository/dsj1_data/html/%s.html" target="_blank" class="external">link</a>',titles)
jaspLinksResults[!(paste0(titles, ".jasp") %in% resultsFound)] <- "-"
htmlLinksResults[!(paste0(titles, ".html") %in% htmlFound)] <- "-"
union(1:4, 3)
union(1:4, 3:5)
resultsFound <- list.files(full.names = FALSE, pattern = "\\jasp", recursive = FALSE,
path = "../repository/dsj1_data/results")
resultsFound
dataFound
dataFound <- list.files(full.names = FALSE, pattern = "\\jasp", recursive = FALSE,
path = "../repository/dsj1_data/data")
dataFound
resultsFound <- list.files(full.names = FALSE, pattern = "\\jasp", recursive = FALSE,
path = "../repository/dsj1_data/results")
dataFound <- list.files(full.names = FALSE, pattern = "\\jasp", recursive = FALSE,
path = "../repository/dsj1_data/data")
htmlFound <- list.files(full.names = FALSE, pattern = "\\html", recursive = FALSE,
path = "../repository/dsj1_data/html")
titles <- union(gsub(dataFound, pattern = "_data.jasp", replacement = ""),
gsub(resultsFound, pattern = ".jasp", replacement = ""))
titles
resultsFound <- list.files(full.names = FALSE, pattern = "\\jasp", recursive = FALSE,
path = "../repository/dsj1_data/results")
dataFound <- list.files(full.names = FALSE, pattern = "\\jasp", recursive = FALSE,
path = "../repository/dsj1_data/data")
htmlFound <- list.files(full.names = FALSE, pattern = "\\html", recursive = FALSE,
path = "../repository/dsj1_data/html")
titles <- union(gsub(dataFound, pattern = "_data.jasp", replacement = ""),
gsub(resultsFound, pattern = ".jasp", replacement = ""))
jaspLinksResults <- sprintf('<a href="../repository/dsj1_data/results/%s" target="_blank" class="external">link</a>',files)
jaspLinksData <- sprintf('<a href="../repository/dsj1_data/results/%s_data.jasp" target="_blank" class="external">link</a>',titles)
htmlLinksResults <- sprintf('<a href="../repository/dsj1_data/html/%s.html" target="_blank" class="external">link</a>',titles)
jaspLinksResults[!(paste0(titles, ".jasp") %in% resultsFound)] <- "-"
jaspLinksData[!(paste0(titles, "_data.jasp") %in% dataFound)] <- "-"
htmlLinksResults[!(paste0(titles, ".html") %in% htmlFound)] <- "-"
linkList <- data.frame(Topic = titles,
# Html = htmlLinks,
Data = jaspLinksData,
Results = jaspLinksResults,
Html = htmlLinksResults)
# Csv = csvLinks)
knitr::kable(dplyr::arrange(linkList), escape = FALSE,format = "html") %>%
kable_styling(full_width = TRUE)
?multcomp::cld
agricolea
library(agricolea)
library(agricolae)
install.packages("agricolae")
library(agricolae)
?LSD.test
# Sample data
data <- data.frame(
response = c(5.2, 4.8, 6.1, 5.9, 5.5, 4.7, 6.3, 5.8, 5.6, 5.2),
group = factor(c("A", "A", "B", "B", "B", "C", "C", "C", "D", "D"))
)
# Conduct ANOVA
anova_result <- aov(response ~ group, data = data)
summary(anova_result)
# Check if ANOVA is significant
if (summary(anova_result)[[1]][["Pr(>F)"]][1] < 0.05) {
# Perform LSD test
lsd_result <- LSD.test(anova_result, "group", p.adj = "none")
print(lsd_result)
} else {
cat("ANOVA is not significant. LSD test not performed.\n")
}
# Sample data
data <- data.frame(
response = c(5.2, 4.8, 6.1, 5.9, 5.5, 4.7, 6.3, 5.8, 5.6, 5.2),
group = factor(c("A", "A", "B", "B", "B", "C", "C", "C", "D", "D"))
)
# Conduct ANOVA
anova_result <- aov(response ~ group, data = data)
summary(anova_result)
# Check if ANOVA is significant
if (summary(anova_result)[[1]][["Pr(>F)"]][1] < 0.05) {
# Perform LSD test
lsd_result <- LSD.test(anova_result, "group", p.adj = "none")
print(lsd_result)
} else {
cat("ANOVA is not significant. LSD test not performed.\n")
}
# Sample data
data <- data.frame(
response = c(5.2, 4.8, 6.1, 5.9, 5.5, 4.7, 6.3, 5.8, 50.6, 5.2),
group = factor(c("A", "A", "B", "B", "B", "C", "C", "C", "D", "D"))
)
# Conduct ANOVA
anova_result <- aov(response ~ group, data = data)
summary(anova_result)
# Check if ANOVA is significant
if (summary(anova_result)[[1]][["Pr(>F)"]][1] < 0.05) {
# Perform LSD test
lsd_result <- LSD.test(anova_result, "group", p.adj = "none")
print(lsd_result)
} else {
cat("ANOVA is not significant. LSD test not performed.\n")
}
# Sample data
data <- data.frame(
response = c(5.2, 4.8, 6.1, 5.9, 5.5, 4.7, 6.3, 50.8, 50.6, 5.2),
group = factor(c("A", "A", "B", "B", "B", "C", "C", "C", "D", "D"))
)
# Conduct ANOVA
anova_result <- aov(response ~ group, data = data)
summary(anova_result)
# Check if ANOVA is significant
if (summary(anova_result)[[1]][["Pr(>F)"]][1] < 0.05) {
# Perform LSD test
lsd_result <- LSD.test(anova_result, "group", p.adj = "none")
print(lsd_result)
} else {
cat("ANOVA is not significant. LSD test not performed.\n")
}
# Sample data
data <- data.frame(
response = c(5.2, 4.8, 6.1, 5.9, 5.5, 4.7, 6.3, 50.8, 50.6, 500.2),
group = factor(c("A", "A", "B", "B", "B", "C", "C", "C", "D", "D"))
)
# Conduct ANOVA
anova_result <- aov(response ~ group, data = data)
summary(anova_result)
# Check if ANOVA is significant
if (summary(anova_result)[[1]][["Pr(>F)"]][1] < 0.05) {
# Perform LSD test
lsd_result <- LSD.test(anova_result, "group", p.adj = "none")
print(lsd_result)
} else {
cat("ANOVA is not significant. LSD test not performed.\n")
}
# Sample data
data <- data.frame(
response = c(1.2, 4.8, 6.1, 5.9, 5.5, 4.7, 6.3, 50.8, 50.6, 500.2),
group = factor(c("A", "A", "B", "B", "B", "C", "C", "C", "D", "D"))
)
# Conduct ANOVA
anova_result <- aov(response ~ group, data = data)
summary(anova_result)
# Check if ANOVA is significant
if (summary(anova_result)[[1]][["Pr(>F)"]][1] < 0.05) {
# Perform LSD test
lsd_result <- LSD.test(anova_result, "group", p.adj = "none")
print(lsd_result)
} else {
cat("ANOVA is not significant. LSD test not performed.\n")
}
anova_result
summary(anova_result)
# Sample data
data <- data.frame(
response = c(1.2, 4.8, 6.1, 5.9, 5.5, 4.7, 6.3, 5000.8, 50.6, 500.2),
group = factor(c("A", "A", "B", "B", "B", "C", "C", "C", "D", "D"))
)
# Conduct ANOVA
anova_result <- aov(response ~ group, data = data)
summary(anova_result)
# Check if ANOVA is significant
if (summary(anova_result)[[1]][["Pr(>F)"]][1] < 0.05) {
# Perform LSD test
lsd_result <- LSD.test(anova_result, "group", p.adj = "none")
print(lsd_result)
} else {
cat("ANOVA is not significant. LSD test not performed.\n")
}
# Sample data
data <- data.frame(
response = c(1.2, 4.8, 6.1, 5.9, 5.5, 4.7, 6.3, 5000.8, 5.6, 5.2),
group = factor(c("A", "A", "B", "B", "B", "C", "C", "C", "D", "D"))
)
# Conduct ANOVA
anova_result <- aov(response ~ group, data = data)
summary(anova_result)
# Check if ANOVA is significant
if (summary(anova_result)[[1]][["Pr(>F)"]][1] < 0.05) {
# Perform LSD test
lsd_result <- LSD.test(anova_result, "group", p.adj = "none")
print(lsd_result)
} else {
cat("ANOVA is not significant. LSD test not performed.\n")
}
# Sample data
data <- data.frame(
response = c(1.2, 4.8, 6.1, 5.9, 5.5, 4.7, 600.3, 5000.8, 5.6, 5.2),
group = factor(c("A", "A", "B", "B", "B", "C", "C", "C", "D", "D"))
)
# Conduct ANOVA
anova_result <- aov(response ~ group, data = data)
summary(anova_result)
# Check if ANOVA is significant
if (summary(anova_result)[[1]][["Pr(>F)"]][1] < 0.05) {
# Perform LSD test
lsd_result <- LSD.test(anova_result, "group", p.adj = "none")
print(lsd_result)
} else {
cat("ANOVA is not significant. LSD test not performed.\n")
}
# Sample data
data <- data.frame(
response = c(1.2, 4.8, 6.1, 5.9, 5.5, 4.7, 600.3, 5000.8, 500000.6, 5000000.2),
group = factor(c("A", "A", "B", "B", "B", "C", "C", "C", "D", "D"))
)
# Conduct ANOVA
anova_result <- aov(response ~ group, data = data)
summary(anova_result)
# Check if ANOVA is significant
if (summary(anova_result)[[1]][["Pr(>F)"]][1] < 0.05) {
# Perform LSD test
lsd_result <- LSD.test(anova_result, "group", p.adj = "none")
print(lsd_result)
} else {
cat("ANOVA is not significant. LSD test not performed.\n")
}
tapply(data$response, data$group, mean)
# Sample data
data <- data.frame(
response = rnorm(20, rep(c(0, 5), each = 10)))
group = factor(c("A", "A", "B", "B", "B", "C", "C", "C", "D", "D"))
data
# Sample data
data <- data.frame(
response = rnorm(20, rep(c(0, 5), each = 10)),
group = factor(c("A", "A", "B", "B", "B", "C", "C", "C", "D", "D"))
)
data
# Sample data
data <- data.frame(
response = rnorm(20, rep(c(0, 5), each = 10)),
group = factor(rep(letters[1:4], each = 5))
)
# Conduct ANOVA
anova_result <- aov(response ~ group, data = data)
summary(anova_result)
# Check if ANOVA is significant
if (summary(anova_result)[[1]][["Pr(>F)"]][1] < 0.05) {
# Perform LSD test
lsd_result <- LSD.test(anova_result, "group", p.adj = "none")
print(lsd_result)
} else {
cat("ANOVA is not significant. LSD test not performed.\n")
}
# Conduct ANOVA
anova_result <- aov(response ~ group, data = data)
summary(anova_result)
# Perform LSD test
lsd_result <- LSD.test(anova_result, "group", p.adj = "none")
print(lsd_result)
cessary library
# Load necessary library
library(ggplot2)
# Parameters for the negative binomial distribution
size <- 5  # Number of successes
prob <- 0.5  # Probability of success
# Define the range of the sample space
x <- 0:20  # Number of failures
# Calculate the probabilities using the negative binomial distribution
probabilities <- dnbinom(x, size, prob)
# Create a data frame for plotting
data <- data.frame(
failures = x,
probability = probabilities
)
# Plot the sample space using ggplot2
ggplot(data, aes(x = failures, y = probability)) +
geom_bar(stat = "identity", fill = "blue", alpha = 0.7) +
labs(
title = "Negative Binomial Distribution Sample Space",
x = "Number of Failures",
y = "Probability"
) +
theme_minimal()
# Load necessary library
library(ggplot2)
# Parameters for the negative binomial distribution
size <- 5  # Number of successes
prob <- 0.4  # Probability of success
# Define the range of the sample space
x <- 0:20  # Number of failures
# Calculate the probabilities using the negative binomial distribution
probabilities <- dnbinom(x, size, prob)
# Create a data frame for plotting
data <- data.frame(
failures = x,
probability = probabilities
)
# Plot the sample space using ggplot2
ggplot(data, aes(x = failures, y = probability)) +
geom_bar(stat = "identity", fill = "blue", alpha = 0.7) +
labs(
title = "Negative Binomial Distribution Sample Space",
x = "Number of Failures",
y = "Probability"
) +
theme_minimal()
# Sample data
data <- data.frame(
response = rnorm(20, rep(c(0, 5), each = 10)),
group = factor(rep(letters[1:4], each = 5))
)
# Conduct ANOVA
anova_result <- aov(response ~ group, data = data)
summary(anova_result)
# Check if ANOVA is significant
if (summary(anova_result)[[1]][["Pr(>F)"]][1] < 0.05) {
# Perform LSD test
lsd_result <- LSD.test(anova_result, "group", p.adj = "none")
print(lsd_result)
} else {
cat("ANOVA is not significant. LSD test not performed.\n")
}
# Load necessary library
library(ggplot2)
# Parameters for the negative binomial distribution
size <- 1  # Number of successes
prob <- 0.4  # Probability of success
# Define the range of the sample space
x <- 0:20  # Number of failures
# Calculate the probabilities using the negative binomial distribution
probabilities <- dnbinom(x, size, prob)
# Create a data frame for plotting
data <- data.frame(
failures = x,
probability = probabilities
)
# Plot the sample space using ggplot2
ggplot(data, aes(x = failures, y = probability)) +
geom_bar(stat = "identity", fill = "blue", alpha = 0.7) +
labs(
title = "Negative Binomial Distribution Sample Space",
x = "Number of Failures",
y = "Probability"
) +
theme_minimal()
# Load necessary library
library(ggplot2)
# Parameters for the negative binomial distribution
size <- 2  # Number of failures (swipes) until the experiment is stopped
prob <- 0.4  # Probability of success (like)
# Define the range of the sample space
x <- 0:20  # Number of successes (likes)
# Calculate the probabilities using the negative binomial distribution
probabilities <- dnbinom(x, size, prob)
# Create a data frame for plotting
data <- data.frame(
likes = x,
probability = probabilities
)
# Plot the sample space using ggplot2
ggplot(data, aes(x = likes, y = probability)) +
geom_bar(stat = "identity", fill = "blue", alpha = 0.7) +
labs(
title = "Negative Binomial Distribution: Number of Likes until the Second Swipe",
x = "Number of Likes",
y = "Probability"
) +
theme_minimal()
