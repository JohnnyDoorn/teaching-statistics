# Independent factorial ANOVA {.section}

Two or more independent variables with two or more categories. One dependent variable.

```{r, echo=FALSE}
rm(list=ls())
source("~/GitHubStuff/ShinyApps/ShinyApps/FacANOVA/plotSquaresFunction.R")

data <- read.csv("anova_alcohol_speed_daytime.csv")
data$speed <- factor(data$speed, levels = c("none", "some", "much"))
levels(data$speed) <- c("none (S)", "some (S)", "much (S)")
data$alcohol <- factor(data$alcohol, levels = c("none", "some", "much"))
levels(data$alcohol) <- c("none (A)", "some (A)", "much (A)")
if(!"ggplot2" %in% installed.packages()) { install.packages("ggplot2") }
library("ggplot2")

# set.seed(1976)

if(!"DT" %in% installed.packages()) { install.packages("DT") }
library("DT")
```

## Independent factorial ANOVA

The independent factorial ANOVA analyses the variance of multiple independent variables (Factors) with two or more categories.

Effects and interactions:

* 1 dependent/outcome variable
* 2 or more independent/predictor variables
    * 2 or more cat./levels
    
## Assumptions {.smaller}

* Continuous variable
* Random sample
* Normally distributed 
    * Q-Q plot
* Equal variance within groups
    * Ratio of observed sd's
    * Welch correction only exists for one-way ANOVA
    

## Formulas {.smaller}

| Variance | Sum of squares | df | Mean squares | F-ratio |
|----------|----------------|----|--------------|---------|
| Model | $\text{SS}_{\text{model}} = \sum{n_k(\bar{X}_k-\bar{X})^2}$ | $k_{model}-1$ | $\frac{\text{SS}_{\text{model}}}{\text{df}_{\text{model}}}$ | $\frac{\text{MS}_{\text{model}}}{\text{MS}_{\text{error}}}$ |
| $\hspace{2ex}A$ | $\text{SS}_{\text{A}} = \sum{n_k(\bar{X}_k-\bar{X})^2}$ | $k_A-1$ | $\frac{\text{SS}_{\text{A}}}{\text{df}_{\text{A}}}$ | $\frac{\text{MS}_{\text{A}}}{\text{MS}_{\text{error}}}$ |
| $\hspace{2ex}B$ | $\text{SS}_{\text{B}} = \sum{n_k(\bar{X}_k-\bar{X})^2}$ | $k_B-1$ | $\frac{\text{SS}_{\text{B}}}{\text{df}_{\text{B}}}$ | $\frac{\text{MS}_{\text{B}}}{\text{MS}_{\text{error}}}$ |
| $\hspace{2ex}AB$ | $\text{SS}_{A \times B} = \text{SS}_{\text{model}} - \text{SS}_{\text{A}} - \text{SS}_{\text{B}}$ | $df_A \times df_B$ | $\frac{\text{SS}_{\text{AB}}}{\text{df}_{\text{AB}}}$ | $\frac{\text{MS}_{\text{AB}}}{\text{MS}_{\text{error}}}$ |
| Error  | $\text{SS}_{\text{error}} = \sum{s_k^2(n_k-1)}$ | $N-k_{model}$ | $\frac{\text{SS}_{\text{error}}}{\text{df}_{\text{error}}}$ | |
| Total | $\text{SS}_{\text{total}} = \text{SS}_{\text{model}} + \text{SS}_{\text{error}}$ | $N-1$ | $\frac{\text{SS}_{\text{total}}}{\text{df}_{\text{total}}}$ | |

## Example {.smaller}

In this example we will look at the amount of accidents in a car driving simulator while subjects where given varying doses of speed and alcohol.

* Dependent variable
    * Accidents
* Independent variables
    * Speed dose
        * None / Small / Large
    * Alcohol dose
        * None / small / large

<!-- ## -->

<!-- person | alcohol | speed | accidents -->
<!-- -------|---------|-------|---------- -->
<!-- 1      | 1       | 1     | 0 -->
<!-- 2      | 1       | 2     | 2 -->
<!-- 3      | 1       | 3     | 4 -->
<!-- 4      | 2       | 1     | 6 -->
<!-- 5      | 2       | 2     | 8 -->
<!-- 6      | 2       | 3     | 10 -->
<!-- 7      | 3       | 1     | 12 -->
<!-- 8      | 3       | 2     | 14 -->
<!-- 9      | 3       | 3     | 16 -->
      
## Data {.smaller}

```{r, echo=FALSE}
datatable(data, options = list(searching = FALSE, scrollY = 415, paging = F, info = F))
```

## SS full model {.smaller}

| Variance | Sum of squares | df | Mean squares | F-ratio |
|----------|----------------|----|--------------|---------|
| Model | $\text{SS}_{\text{model}} = \sum{n_k(\bar{X}_k-\bar{X})^2}$ | $k_{model}-1$ | $\frac{\text{SS}_{\text{model}}}{\text{df}_{\text{model}}}$ | $\frac{\text{MS}_{\text{model}}}{\text{MS}_{\text{error}}}$ |

<br>

Predicts group means for each cell of the design:

```{r, echo=FALSE}
accidents <- data$accidents
n         <- length(accidents)

# Descriptives for model
means.model <- aggregate(accidents ~ speed + alcohol + speed * alcohol, data, mean  )
n.k.model   <- aggregate(accidents ~ speed + alcohol + speed * alcohol, data, length)

cbind(means.model, n = n.k.model$accidents)
```

## {.smaller}

```{r, echo=FALSE}
# Calculate expected accidents
fit <- lm(accidents ~ speed + alcohol + speed * alcohol, data)
exp.accidents <- fit$fitted.values

datatable(data.frame(speed = data$speed, 
                     alcohol = data$alcohol, 
                     accidents = round(accidents,2), 
                     grand.mean = round(mean(accidents),2), 
                     group.mean = round(exp.accidents,2)), 
          options = list(searching = FALSE, scrollY = 415, paging = FALSE, info = FALSE))
```

<!-- ## Group means -->

```{r, echo=FALSE}
SS.model <- sum((exp.accidents - mean(data$accidents))^2)
```

```{r, echo=FALSE}
means <- tapply(data$accidents, list(data$speed, data$alcohol), mean)
# means
ns <- table(list(data$speed, data$alcohol))
# ns

```


```{r, echo=FALSE}
squares <- (means - mean(accidents))^2
# squares 

ss.model <- sum(squares * ns)
# ss.model
```

## SS full model visual

```{r, echo=FALSE}
input <- list()
input$whatPred <- "Alcohol + Speed + A:S"
input$whatDisplay <- c("Segments", "Sums")
    plotSumSquares(mydat, input = input, sumSq = "Model", myMain = "Full Model SS",
                   alcColors = palette.colors(n = 3, palette = "Okabe-Ito"),
                   speedSymbols = c(21, 22, 23)) 
```


## SS error

| Variance | Sum of squares | df | Mean squares | F-ratio |
|----------|----------------|----|--------------|---------|
| Error  | $\text{SS}_{\text{error}} = \sum{s_k^2(n_k-1)}$ | $N-k$ | $\frac{\text{SS}_{\text{error}}}{\text{df}_{\text{error}}}$ | |

<br>

```{r, echo=FALSE}
SS.error <- sum((accidents - exp.accidents)^2)
# SS.error
```

```{r, echo=FALSE}
vars <- tapply(data$accidents, list(data$speed, data$alcohol), var)
# vars
```


```{r, echo=FALSE}
ss.error <- sum(vars * (ns - 1))
# ss.error
```

## SS error visual

```{r, echo=FALSE}
input <- list()
input$whatPred <- "Alcohol + Speed + A:S"
input$whatDisplay <- c("Segments", "Sums")
    plotSumSquares(mydat, input = input, sumSq = "Error", myMain = "Full Model SS Error",
                   alcColors = palette.colors(n = 3, palette = "Okabe-Ito"),
                   speedSymbols = c(21, 22, 23)) 
```

## SS A Speed {.subsection}

| Variance | Sum of squares | df | Mean squares | F-ratio |
|----------|----------------|----|--------------|---------|
| $\hspace{2ex}A$ | $\text{SS}_{\text{A}} = \sum{n_k(\bar{X}_k-\bar{X})^2}$ | $k_A-1$ | $\frac{\text{SS}_{\text{A}}}{\text{df}_{\text{A}}}$ | $\frac{\text{MS}_{\text{A}}}{\text{MS}_{\text{error}}}$ |

<br>

```{r, echo=FALSE}
# Descriptives for speed
means.speed <- aggregate(accidents ~ speed, data, mean  )
n.k.speed   <- aggregate(accidents ~ speed, data, length)
data$mean.total <- mean(data$accidents)
names(means.speed)[2] <- "means.speed"
#means.speed

data <- merge(data, means.speed,  by="speed",  all.x=TRUE)
data <- data[order(data$subjects),]
```

```{r, echo = FALSE}
SS.speed <- sum(with(data, (means.speed - mean.total)^2))
#SS.speed
```

```{r, echo=FALSE}
# m.s1 = mean(subset(data, speed == "none", select = "accidents")$accidents)
# m.s2 = mean(subset(data, speed == "some", select = "accidents")$accidents)
# m.s3 = mean(subset(data, speed == "much", select = "accidents")$accidents)

s.means <- tapply(data$accidents, data$speed, mean)
s.ns <- 60

s.means
```


```{r, echo=FALSE}
s.squares <- (s.means - mean(accidents))^2
# s.squares

ss.speed <- sum(60 * s.squares)
# ss.speed
```

## SS A Speed Visual

```{r, echo=FALSE}
input <- list()
input$whatPred <- "Speed"
input$whatDisplay <- c("Segments", "Sums")
    plotSumSquares(mydat, input = input, sumSq = "Model", myMain = "Speed Model SS",
                   alcColors = palette.colors(n = 3, palette = "Okabe-Ito"),
                   speedSymbols = c(21, 22, 23)) 
```

## SS A Speed Error Visual

```{r, echo=FALSE}
input <- list()
input$whatPred <- "Speed"
input$whatDisplay <- c("Segments", "Sums")
    plotSumSquares(mydat, input = input, sumSq = "Error", myMain = "Speed Model SS",
                   alcColors = palette.colors(n = 3, palette = "Okabe-Ito"),
                   speedSymbols = c(21, 22, 23), overlayFullPred = FALSE) 
```


## SS B Alcohol {.subsection}

| Variance | Sum of squares | df | Mean squares | F-ratio |
|----------|----------------|----|--------------|---------|
| $\hspace{2ex}B$ | $\text{SS}_{\text{B}} = \sum{n_k(\bar{X}_k-\bar{X})^2}$ | $k_B-1$ | $\frac{\text{SS}_{\text{B}}}{\text{df}_{\text{B}}}$ | $\frac{\text{MS}_{\text{B}}}{\text{MS}_{\text{error}}}$ |

```{r, echo=FALSE}
# Descriptives for alcohol
means.alcohol <- aggregate(accidents ~ alcohol, data, mean)
n.k.alcohol   <- aggregate(accidents ~ alcohol, data, length)
names(means.alcohol)[2] <- "means.alcohol"
# means.alcohol

data <- merge(data,means.alcohol,by="alcohol", all.x=TRUE)
data <- data[order(data$subjects),]
```

```{r, echo=FALSE}
SS.alcohol <- sum(with(data, (means.alcohol - mean.total)^2))
# SS.alcohol
```

```{r, echo = FALSE}
a.means <- tapply(data$accidents, data$alcohol, mean)
a.ns <- 60

a.means
```



```{r, echo=FALSE}
a.squares <- (a.means - mean(accidents))^2
# a.squares

ss.alcohol <- sum(60 * a.squares)
# ss.alcohol
```

## SS B Alcohol Visual

```{r, echo=FALSE}
input <- list()
input$whatPred <- "Alcohol"
input$whatDisplay <- c("Segments", "Sums")
    plotSumSquares(mydat, input = input, sumSq = "Model", myMain = "Alcohol Model SS",
                   alcColors = palette.colors(n = 3, palette = "Okabe-Ito"),
                   speedSymbols = c(21, 22, 23)) 
```

## SS B Alcohol Error Visual

```{r, echo=FALSE}
input <- list()
input$whatPred <- "Alcohol"
input$whatDisplay <- c("Segments", "Sums")
    plotSumSquares(mydat, input = input, sumSq = "Error", myMain = "Alcohol Model SS",
                   alcColors = palette.colors(n = 3, palette = "Okabe-Ito"),
                   speedSymbols = c(21, 22, 23), overlayFullPred = FALSE) 
```

## SS AB Alcohol x Speed {.smaller}

| Variance | Sum of squares | df | Mean squares | F-ratio |
|----------|----------------|----|--------------|---------|
| $\hspace{2ex}AB$ | $\text{SS}_{A \times B} = \text{SS}_{\text{model}} - \text{SS}_{\text{A}} - \text{SS}_{\text{B}}$ | $df_A \times df_B$ | $\frac{\text{SS}_{\text{AB}}}{\text{df}_{\text{AB}}}$ | $\frac{\text{MS}_{\text{AB}}}{\text{MS}_{\text{error}}}$ |

<br>

```{r, echo=TRUE}
# Sums of squares for the interaction between speed and alcohol
ss.speed.alcohol <- ss.model - ss.speed - ss.alcohol
ss.speed.alcohol
```

## Using mean squares to compute $F$

For every $F$-statistic, we use the $MS_{error}$ of the full model:


$$\begin{aligned}
F_{Speed} &= \frac{{MS}_{Speed}}{{MS}_{error}} \\
F_{Alcohol} &= \frac{{MS}_{Alcohol}}{{MS}_{error}} \\
F_{Alcohol \times Speed} &= \frac{{MS}_{Alcohol \times Speed}}{{MS}_{error}} \\
\end{aligned}$$

## Interaction

$$F_{Alcohol \times Speed}$$

```{r, echo=TRUE}
N          <- length(accidents)
k.speed    <- 3
k.alcohol  <- 3
k.model    <- 9
df.speed   <- k.speed   - 1
df.alcohol <- k.alcohol - 1
df.speed.alcohol <- df.speed * df.alcohol

ms.speed.alcohol <- ss.speed.alcohol / df.speed.alcohol

df.error <- N - k.model
ms.error <- ss.error / df.error
```

## $P$-value

```{r, echo=FALSE}
F.speed.alcohol <- fStat <- ms.speed.alcohol / ms.error
# F.speed.alcohol

# Set up the plot for the F-distribution
curve(df(x, ms.error, df.error), from = 0, to = 4, n = 1000, bty = "n", las = 1, ylim = c(0, 6),
      xlab = "F-value", ylab = "Density", main = "F-distribution with P-value Region")

# Shade the upper tail (p-value region) using polygon
# Define the region to fill (upper tail, greater than fStat)
x_vals <- seq(fStat, 10, length.out = 100)
y_vals <- df(x_vals, ms.error, df.error)

# Draw the polygon to fill the area under the curve
polygon(c(fStat, x_vals, 10), c(0, y_vals, 0), col = "lightblue", border = NA)

# Optionally, add a vertical line at the F-statistic
arrows(x0 = fStat, x1 = fStat, y0 = 0 , y1 = 3.6, col = "darkred", lwd = 2)
text(x = fStat, y = 5.5, paste("F =", round(fStat, 2)), cex = 1.2)
text(x = fStat, y = 4, paste("p-val =", round(pf(fStat, ms.error, df.error, lower.tail = FALSE), 4)), cex = 1.2)
```



<!-- ------ -->

<!-- ```{r, echo=FALSE} -->
<!-- F.values = seq(0, 10, .01) -->

<!-- plot(F.values, df(F.values, df.speed.alcohol, df.error), type = "l", ylab="density", main = "H0 and HA F-distribution") -->

<!-- critical.value = qf(.95, df.speed.alcohol, df.error) -->

<!-- critical.range = seq(critical.value, 10, .01) -->

<!-- polygon(c(critical.range,rev(critical.range)),  -->
<!--         c(critical.range*0, rev(df(critical.range, df.speed.alcohol, df.error, ncp = 5))), col = "green") -->

<!-- lines(F.values, df(F.values, df.speed.alcohol, df.error, ncp = 5)) -->

<!-- polygon(c(critical.range,rev(critical.range)),  -->
<!--         c(critical.range*0, rev(df(critical.range, df.speed.alcohol, df.error))), col = rgb(1,0,0,1), density = 40, angle = -45) -->

<!-- p.range = seq(F.speed.alcohol, 10, .01) -->

<!-- polygon(c(p.range,rev(p.range)),  -->
<!--         c(p.range*0, rev(df(p.range, df.speed.alcohol, df.error))), col = rgb(0,0,1,.6), density = 20) -->
<!-- ``` -->

## Partition the explained variance (BONUS) {.smaller}

```{r, echo=FALSE}

# Define data points for visualization of sum of squares
individual_model1 <- 50  # SS for model with IV1
individual_model2 <- 60  # SS for model with IV2
shared_variance <- 20     # Overlap between the two IVs
combined_model <- individual_model1 + individual_model2 + shared_variance  # Hypothetical total for combined model

# Create a vector of the sum of squares values
values <- c(individual_model1, individual_model2, shared_variance, combined_model)

# Create labels for the plot
labels <- c("IV1", "IV2", "Shared Variance", "Combined Model")

# Create a bar plot using base R
barplot(values, names.arg = labels, col = c("blue", "green", "orange", "red"),
        main = "True Division of Model Sum of Squares for Model with 2 IVs", las =1,
        ylab = "Sum of Squares", ylim = c(0, 200))

# Add text labels on top of the bars showing exact values
text(x = .6:14.6*1.2, y = values, labels = round(values, 2), pos = 3)
```
## Partition the explained variance (BONUS) {.smaller}

```{r, echo=FALSE}

# Define data points for visualization of sum of squares
individual_model1 <- 0  # SS for model with IV1
individual_model2 <- 0  # SS for model with IV2
shared_variance <- 0     # Overlap between the two IVs
combined_model <- 130 #individual_model1 + individual_model2 + shared_variance  # Hypothetical total for combined model

# Create a vector of the sum of squares values
values <- c(individual_model1, individual_model2, shared_variance, combined_model)

# Create labels for the plot
labels <- c("IV1", "IV2", "Shared Variance", "Combined Model")

# Create a bar plot using base R
barplot(values, names.arg = labels, col = c("blue", "green", "orange", "red"),
        main = "Model Sum of Squares in Reality", las = 1,
        ylab = "Sum of Squares", ylim = c(0, 200))

# Add text labels on top of the bars showing exact values
text(x = .6:14.6*1.2, y = values, labels = c(rep("?", 3), values[4]), pos = 3)
```
In reality, we do not know exactly how the shared variance is distributed across these three sources (IV1, IV2, shared)

## Partition the explained variance (BONUS) {.smaller}

```{r, echo=FALSE}

# Define data points for visualization of sum of squares
individual_model1 <- 60  # SS for model with IV1
individual_model2 <- 80  # SS for model with IV2
shared_variance <- 0     # Overlap between the two IVs
combined_model <- 130 #individual_model1 + individual_model2 + shared_variance  # Hypothetical total for combined model

# Create a vector of the sum of squares values
values <- c(individual_model1, individual_model2, shared_variance, combined_model)

# Create labels for the plot
labels <- c("IV1", "IV2", "Shared Variance", "Combined Model")

# Create a bar plot using base R
barplot(values, names.arg = labels, col = c("blue", "green", "orange", "red"),
        main = "Partitioning based on individual models", las = 1,
        ylab = "Sum of Squares", ylim = c(0, 200))

# Add text labels on top of the bars showing exact values
text(x = .6:14.6*1.2, y = values, labels = c(values[1:2], rep("?", 1), values[4]), pos = 3)
```

- Fit a model with only IV1, then use that to compute the explained variance for IV2: $SS_{M1} = 70 \rightarrow SS_{IV2} = 130 - 70 = 60$
- Fit a model with only IV2, then use that to compute the explained variance for IV1: $SS_{M2} = 50 \rightarrow SS_{IV1} = 130 - 50 = 80$
- [See also Oliver Twisted from Chapter 13](https://discoverjasp.com/pages/oliver_twisted.html#please-sir-can-i-customize-my-model)

## Contrast

Planned comparisons

* Exploring differences of theoretical interest
* Higher precision
* Higher power

## Post-Hoc {.smaller}

Unplanned comparisons

* Exploring all possible differences
* Adjust p-value for inflated type 1 error
    * P(1 type-I error) = $0.05$
    * P(not 1 type-I error) = $0.95$
    * P(not 5 type-I errors) = $0.95^5 = `r round(0.950^5, 3)`$
* Bonferroni more conservative, Tukey more permissive

> **Exam note:** know where the options are, exam question will inform you which correction to use

## Effect size in ANOVA {.smaller}

General effect size measure: Partial omega squared $\omega_p^2$

How to interpret? 

| $\omega^2$ and $\omega_p^2$ | Magnitude of Effect | Interpretation |
|---------------------|--------------------|----------------|
| 0.00–0.009          | Very small         | Trivial practical importance |
| 0.01–0.05           | Small              | Small but meaningful variance explained |
| 0.06–0.13           | Medium             | Moderate variance explained |
| ≥ 0.14              | Large              | Substantial variance explained |

## Effect size in follow-up tests {.smaller}

Effect sizes of contrasts or post-hoc comparisons: Cohen's $d$ 
    
How to interpret? 

| Cohen’s *d* | Magnitude of Effect | Interpretation |
|--------------|--------------------|----------------|
| 0.00–0.19    | Very small         | Likely negligible in most contexts |
| 0.20–0.49    | Small              | Noticeable but modest difference |
| 0.50–0.79    | Medium             | Moderate, practically meaningful difference |
| ≥ 0.80       | Large              | Substantial, easily noticeable difference |




## JASP

![](../../images/JASP_logo_green.svg){width="300px"}
