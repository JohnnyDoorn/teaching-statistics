```{r, echo=FALSE}
if(!"DT" %in% installed.packages()) { install.packages("DT") }
library("DT")

if(!"visualize" %in% installed.packages()){ install.packages("visualize") }
library("visualize")

```

# Wilcoxon signed-rank test

Paired 2 samples

## Wilcoxon signed-rank test {.section}

<img src="http://upload.wikimedia.org/wikipedia/en/9/9a/FrankWilcoxon.png" style="float: left; margin: 0 20px 0 0; width: 10%;">

The Wilcoxon signed-rank test is a nonparametric alternative to the paired samples t-test. It assigns + or - signs to the difference between two repeated measures. By ranking the *absolute* differences and summing these ranks for the positive group, the null hypothesis is tested that both positive and negative differences are equal.

## Simulate data

```{r, echo=TRUE}
set.seed(3562534)
n      <- 20
factor <- rep(c("Ecstasy","Alcohol"),each=n/2)
dummy  <- ifelse(factor == "Ecstacy", 0, 1)
b.0    <- 23
b.1    <- 5
error  <- rnorm(n, 0, 1.7)
depres <- b.0 + b.1*dummy + error
depres <- round(depres)

data <- data.frame(factor, depres)

Ecstasy <- subset(data, factor=="Ecstasy")$depres
Alcohol <- subset(data, factor=="Alcohol")$depres

data <- data.frame(Ecstasy, Alcohol)
```

## Example

```{r, echo=FALSE}
datatable(data, options = list(iDisplayLength = 7, searching = FALSE, scrollY = 415, paging = F, info = F))

# Write data for use in SPSS
write.csv(data, "mann-whitney-signed-rank.csv", row.names=FALSE)
```

## Calculate T {.smaller .subsection}


```{r, echo=TRUE}
# Calculate difference in scores between first and second measure
data$difference = data$Ecstasy - data$Alcohol

# Calculate absolute difference in scores between first and second measure
data$abs.difference = abs(data$Ecstasy - data$Alcohol)

# Remove observations where the difference is 0
data <- data[data$difference != 0, ]

# Create rank variable with place holder NA
data$rank <- rank(data$abs.difference)

# Assign a '+' or a '-' to those values 
data$sign <- sign(data$Ecstasy - data$Alcohol)
```

## The data {.smaller}

```{r, echo=FALSE}
datatable(data, options = list(iDisplayLength = 7, searching = FALSE, scrollY = 415, paging = F, info = F))
```

## Calculate $T_+$

```{r, echo=TRUE}
# Calculate the sum of the positive ranks
T_pos <- sum(data$rank * (data$difference > 0))
T_pos

# Calculate N without 0 (no differences).
n <- nrow(data)
n
```

## Calculate $\bar{T}$ and ${SE}_{T}$ {.subsection}

$$\bar{T} = \frac{n(n+1)}{4}$$

```{r, echo=TRUE}
T_mean <- (n*(n+1))/4
T_mean 

# T_mean is the middle point between the minimum and maximum possible value for T
T.min <- 0; T.min
T.max <- sum(1:n); T.max
mean(c(T.min, T.max))
```

$${SE}_{T} = \sqrt{\frac{n(n+1)(2n+1)}{24}}$$

```{r, echo=TRUE}
SE_T <- sqrt( (n*(n+1)*(2*n+1)) / 24)
```

## Calculate Z

$$z = \frac{T_+ - \bar{T}}{{SE}_T}$$

```{r, echo=TRUE}
z <- (T_pos - T_mean)/SE_T
z
```

## Test for significance

```{r, fig.align='center', warning=FALSE, echo=TRUE}
visualize.norm(c(z,-z), section="tails")
```

## Effect size

$$r = \frac{z}{\sqrt{N}}$$

Here $N$ is the number of observations.

```{r, echo=TRUE}
N <- 20
r <- z / sqrt(N)
r
```



<!-- ## The Actual Sampling Distribution of W -->
<!-- ```{r, echo=TRUE} -->

<!-- barplot(height = dbinom(0:28, 28, 0.5), names.arg = 0:28, xlab = "W") -->
<!-- pbinom(18.5, 28, 0.5, lower.tail = FALSE) -->
<!-- ``` -->