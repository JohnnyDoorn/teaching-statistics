}
par(cex = 1.5, cex.lab = 1.6)
densValues <- dbinom(0:input$nFlips, input$nFlips, prob = input$theta)
yMax <- max(densValues) * 1.2
plot(0:input$nFlips, densValues,
col  = allCols,
type = "h",
lwd = 20,
las = 1,
ylab = "Probability",
xlab = "Number of 'Successes'",
ylim = c(0, yMax),
xlim = c(-1, input$nFlips + 1),
# yaxt = 'n',
main = 'Sampling Distribution'
)
if (input$decision != "Nothing") {
if (altHypothesis != "Positive only")
abline(v = leftAbLineLoc, lwd = 2, lty = 2)
if (altHypothesis != "Negative only")
abline(v = rightAbLineLoc, lwd = 2, lty = 2)
text(-0.5, yMax * 0.95, leftArea, col = allCols[1], cex = 2)
text(input$nFlips + 0.5, yMax * 0.95, rightArea, col = allCols[length(allCols)], cex = 2)
text(mean(c(leftAbLineLoc, rightAbLineLoc)), yMax * 0.95, 1 - rightArea - leftArea, col = allCols[nLeftBars + 2], cex = 2)
}
# Add the cumulative probabilities above the bars
text(0:input$nFlips, densValues + yMax * 0.04, round(densValues, 3), col = allCols, cex = 1.2)
allCols
xVals
nLeftBars
leftArea
nLeftBars
ifelse(xVals >= nLeftBars & xVals <= nRightBars, "darkgreen", "purple")
xVals
nRightBars
nRightBars
qbinom(halfAlpha*2, input$nFlips, nulTheta, lower.tail = FALSE)
input <- list(nFlips = 10 , decision = "Reject H0", theta = 0.5)
altHypothesis <- "Negative only"
# altHypothesis <- "Yes"
# Determine the critical regions based on the chosen alternative hypothesis
if (altHypothesis == "Yes") {
nLeftBars <- qbinom(halfAlpha, input$nFlips, nulTheta, lower.tail = TRUE)
nRightBars <- qbinom(halfAlpha, input$nFlips, nulTheta, lower.tail = FALSE)
leftArea <- round(pbinom(nLeftBars - 1, input$nFlips, input$theta), 3)
rightArea <- round(pbinom(input$nFlips - nLeftBars, input$nFlips, input$theta, lower.tail = FALSE), 3)
} else if (altHypothesis == "Positive only") {
nLeftBars <- 0
nRightBars <- qbinom(halfAlpha*2, input$nFlips, nulTheta, lower.tail = FALSE)
leftArea <- 0
rightArea <- round(pbinom(nRightBars, input$nFlips, input$theta, lower.tail = FALSE), 3)
} else if (altHypothesis == "Negative only") {
nLeftBars <- qbinom(halfAlpha*2, input$nFlips, nulTheta, lower.tail = TRUE)
nRightBars <- qbinom(halfAlpha*2, input$nFlips, nulTheta, lower.tail = FALSE)
leftArea <- round(pbinom(nLeftBars - 1, input$nFlips, input$theta), 3)
rightArea <- 0
}
leftAbLineLoc <- qbinom(halfAlpha, input$nFlips, nulTheta, lower.tail = TRUE) - 0.5
rightAbLineLoc <- qbinom(halfAlpha, input$nFlips, nulTheta, lower.tail = FALSE) + 0.5
xVals <- 0:input$nFlips
if (input$decision == "Nothing") {
allCols <- rep("darkgreen", input$nFlips+1)
} else if (input$decision == "Reject H0") {
allCols <- ifelse(xVals >= nLeftBars & xVals <= nRightBars, "darkgreen", "purple")
} else {
allCols <- ifelse(xVals >= leftAbLineLoc & xVals <= rightAbLineLoc, "purple", "darkgreen")
}
par(cex = 1.5, cex.lab = 1.6)
densValues <- dbinom(0:input$nFlips, input$nFlips, prob = input$theta)
yMax <- max(densValues) * 1.2
plot(0:input$nFlips, densValues,
col  = allCols,
type = "h",
lwd = 20,
las = 1,
ylab = "Probability",
xlab = "Number of 'Successes'",
ylim = c(0, yMax),
xlim = c(-1, input$nFlips + 1),
# yaxt = 'n',
main = 'Sampling Distribution'
)
if (input$decision != "Nothing") {
if (altHypothesis != "Positive only")
abline(v = leftAbLineLoc, lwd = 2, lty = 2)
if (altHypothesis != "Negative only")
abline(v = rightAbLineLoc, lwd = 2, lty = 2)
text(-0.5, yMax * 0.95, leftArea, col = allCols[1], cex = 2)
text(input$nFlips + 0.5, yMax * 0.95, rightArea, col = allCols[length(allCols)], cex = 2)
text(mean(c(leftAbLineLoc, rightAbLineLoc)), yMax * 0.95, 1 - rightArea - leftArea, col = allCols[nLeftBars + 2], cex = 2)
}
# Add the cumulative probabilities above the bars
text(0:input$nFlips, densValues + yMax * 0.04, round(densValues, 3), col = allCols, cex = 1.2)
input <- list(nFlips = 10 , decision = "Reject H0", theta = 0.5)
altHypothesis <- "Negative only"
# altHypothesis <- "Yes"
# Determine the critical regions based on the chosen alternative hypothesis
if (altHypothesis == "Yes") {
nLeftBars <- qbinom(halfAlpha, input$nFlips, nulTheta, lower.tail = TRUE)
nRightBars <- qbinom(halfAlpha, input$nFlips, nulTheta, lower.tail = FALSE)
leftArea <- round(pbinom(nLeftBars - 1, input$nFlips, input$theta), 3)
rightArea <- round(pbinom(input$nFlips - nLeftBars, input$nFlips, input$theta, lower.tail = FALSE), 3)
} else if (altHypothesis == "Positive only") {
nLeftBars <- 0
nRightBars <- qbinom(halfAlpha*2, input$nFlips, nulTheta, lower.tail = FALSE)
leftArea <- 0
rightArea <- round(pbinom(nRightBars, input$nFlips, input$theta, lower.tail = FALSE), 3)
} else if (altHypothesis == "Negative only") {
nLeftBars <- qbinom(halfAlpha*2, input$nFlips, nulTheta, lower.tail = TRUE)
nRightBars <- 0
leftArea <- round(pbinom(nLeftBars - 1, input$nFlips, input$theta), 3)
rightArea <- 0
}
leftAbLineLoc <- qbinom(halfAlpha, input$nFlips, nulTheta, lower.tail = TRUE) - 0.5
rightAbLineLoc <- qbinom(halfAlpha, input$nFlips, nulTheta, lower.tail = FALSE) + 0.5
xVals <- 0:input$nFlips
if (input$decision == "Nothing") {
allCols <- rep("darkgreen", input$nFlips+1)
} else if (input$decision == "Reject H0") {
allCols <- ifelse(xVals >= nLeftBars & xVals <= nRightBars, "darkgreen", "purple")
} else {
allCols <- ifelse(xVals >= leftAbLineLoc & xVals <= rightAbLineLoc, "purple", "darkgreen")
}
par(cex = 1.5, cex.lab = 1.6)
densValues <- dbinom(0:input$nFlips, input$nFlips, prob = input$theta)
yMax <- max(densValues) * 1.2
plot(0:input$nFlips, densValues,
col  = allCols,
type = "h",
lwd = 20,
las = 1,
ylab = "Probability",
xlab = "Number of 'Successes'",
ylim = c(0, yMax),
xlim = c(-1, input$nFlips + 1),
# yaxt = 'n',
main = 'Sampling Distribution'
)
if (input$decision != "Nothing") {
if (altHypothesis != "Positive only")
abline(v = leftAbLineLoc, lwd = 2, lty = 2)
if (altHypothesis != "Negative only")
abline(v = rightAbLineLoc, lwd = 2, lty = 2)
text(-0.5, yMax * 0.95, leftArea, col = allCols[1], cex = 2)
text(input$nFlips + 0.5, yMax * 0.95, rightArea, col = allCols[length(allCols)], cex = 2)
text(mean(c(leftAbLineLoc, rightAbLineLoc)), yMax * 0.95, 1 - rightArea - leftArea, col = allCols[nLeftBars + 2], cex = 2)
}
# Add the cumulative probabilities above the bars
text(0:input$nFlips, densValues + yMax * 0.04, round(densValues, 3), col = allCols, cex = 1.2)
qt(1, df = myDF, ncp = 0, lower.tail = TRUE)
qt(1, df = 10, ncp = 0, lower.tail = TRUE)
round(pt(rightAbLineLoc, myDF, ncp = myNCP, lower.tail = FALSE), 3)
round(pt(rightAbLineLoc, 10, ncp = 0, lower.tail = FALSE), 3)
round(pbinom(nRightBars, input$nFlips, input$theta, lower.tail = FALSE), 3)
round(pbinom(nRightBars, input$nFlips, input$theta, lower.tail = TRUE), 3)
input <- list(nFlips = 10 , decision = "Reject H0", theta = 0.5)
altHypothesis <- "Negative only"
# altHypothesis <- "Yes"
# Determine the critical regions based on the chosen alternative hypothesis
if (altHypothesis == "Yes") {
nLeftBars <- qbinom(halfAlpha, input$nFlips, nulTheta, lower.tail = TRUE)
nRightBars <- qbinom(halfAlpha, input$nFlips, nulTheta, lower.tail = FALSE)
leftArea <- round(pbinom(nLeftBars - 1, input$nFlips, input$theta), 3)
rightArea <- round(pbinom(input$nFlips - nLeftBars, input$nFlips, input$theta, lower.tail = FALSE), 3)
} else if (altHypothesis == "Positive only") {
nLeftBars <- 0
nRightBars <- qbinom(halfAlpha*2, input$nFlips, nulTheta, lower.tail = FALSE)
leftArea <- round(pbinom(nLeftBars - 1, input$nFlips, input$theta, lower.tail = TRUE), 3)
rightArea <- round(pbinom(nRightBars, input$nFlips, input$theta, lower.tail = FALSE), 3)
} else if (altHypothesis == "Negative only") {
nLeftBars <- qbinom(halfAlpha*2, input$nFlips, nulTheta, lower.tail = TRUE)
nRightBars <- 0
leftArea <- round(pbinom(nLeftBars - 1, input$nFlips, input$theta), 3)
rightArea <- round(pbinom(nRightBars, input$nFlips, input$theta, lower.tail = TRUE), 3)
}
leftAbLineLoc <- qbinom(halfAlpha, input$nFlips, nulTheta, lower.tail = TRUE) - 0.5
rightAbLineLoc <- qbinom(halfAlpha, input$nFlips, nulTheta, lower.tail = FALSE) + 0.5
xVals <- 0:input$nFlips
if (input$decision == "Nothing") {
allCols <- rep("darkgreen", input$nFlips+1)
} else if (input$decision == "Reject H0") {
allCols <- ifelse(xVals >= nLeftBars & xVals <= nRightBars, "darkgreen", "purple")
} else {
allCols <- ifelse(xVals >= leftAbLineLoc & xVals <= rightAbLineLoc, "purple", "darkgreen")
}
par(cex = 1.5, cex.lab = 1.6)
densValues <- dbinom(0:input$nFlips, input$nFlips, prob = input$theta)
yMax <- max(densValues) * 1.2
plot(0:input$nFlips, densValues,
col  = allCols,
type = "h",
lwd = 20,
las = 1,
ylab = "Probability",
xlab = "Number of 'Successes'",
ylim = c(0, yMax),
xlim = c(-1, input$nFlips + 1),
# yaxt = 'n',
main = 'Sampling Distribution'
)
if (input$decision != "Nothing") {
if (altHypothesis != "Positive only")
abline(v = leftAbLineLoc, lwd = 2, lty = 2)
if (altHypothesis != "Negative only")
abline(v = rightAbLineLoc, lwd = 2, lty = 2)
text(-0.5, yMax * 0.95, leftArea, col = allCols[1], cex = 2)
text(input$nFlips + 0.5, yMax * 0.95, rightArea, col = allCols[length(allCols)], cex = 2)
text(mean(c(leftAbLineLoc, rightAbLineLoc)), yMax * 0.95, 1 - rightArea - leftArea, col = allCols[nLeftBars + 2], cex = 2)
}
# Add the cumulative probabilities above the bars
text(0:input$nFlips, densValues + yMax * 0.04, round(densValues, 3), col = allCols, cex = 1.2)
input <- list(nFlips = 10 , decision = "Reject H0", theta = 0.5)
altHypothesis <- "Negative only"
# altHypothesis <- "Yes"
# Determine the critical regions based on the chosen alternative hypothesis
if (altHypothesis == "Yes") {
nLeftBars <- qbinom(halfAlpha, input$nFlips, nulTheta, lower.tail = TRUE)
nRightBars <- qbinom(halfAlpha, input$nFlips, nulTheta, lower.tail = FALSE)
leftArea <- round(pbinom(nLeftBars - 1, input$nFlips, input$theta), 3)
rightArea <- round(pbinom(input$nFlips - nLeftBars, input$nFlips, input$theta, lower.tail = FALSE), 3)
} else if (altHypothesis == "Positive only") {
nLeftBars <- 0
nRightBars <- qbinom(halfAlpha*2, input$nFlips, nulTheta, lower.tail = FALSE)
leftArea <- 0
rightArea <- round(pbinom(nRightBars, input$nFlips, input$theta, lower.tail = FALSE), 3)
} else if (altHypothesis == "Negative only") {
nLeftBars <- qbinom(halfAlpha*2, input$nFlips, nulTheta, lower.tail = TRUE)
nRightBars <- 0
leftArea <- round(pbinom(nLeftBars - 1, input$nFlips, input$theta), 3)
rightArea <- 0
}
leftAbLineLoc <- qbinom(halfAlpha, input$nFlips, nulTheta, lower.tail = TRUE) - 0.5
rightAbLineLoc <- qbinom(halfAlpha, input$nFlips, nulTheta, lower.tail = FALSE) + 0.5
xVals <- 0:input$nFlips
if (input$decision == "Nothing") {
allCols <- rep("darkgreen", input$nFlips+1)
} else if (input$decision == "Reject H0") {
allCols <- ifelse(xVals >= nLeftBars & xVals <= nRightBars, "darkgreen", "purple")
} else {
allCols <- ifelse(xVals >= leftAbLineLoc & xVals <= rightAbLineLoc, "purple", "darkgreen")
}
par(cex = 1.5, cex.lab = 1.6)
densValues <- dbinom(0:input$nFlips, input$nFlips, prob = input$theta)
yMax <- max(densValues) * 1.2
plot(0:input$nFlips, densValues,
col  = allCols,
type = "h",
lwd = 20,
las = 1,
ylab = "Probability",
xlab = "Number of 'Successes'",
ylim = c(0, yMax),
xlim = c(-1, input$nFlips + 1),
# yaxt = 'n',
main = 'Sampling Distribution'
)
if (input$decision != "Nothing") {
if (altHypothesis != "Positive only")
abline(v = leftAbLineLoc, lwd = 2, lty = 2)
if (altHypothesis != "Negative only")
abline(v = rightAbLineLoc, lwd = 2, lty = 2)
text(-0.5, yMax * 0.95, leftArea, col = allCols[1], cex = 2)
text(input$nFlips + 0.5, yMax * 0.95, rightArea, col = allCols[length(allCols)], cex = 2)
text(mean(c(leftAbLineLoc, rightAbLineLoc)), yMax * 0.95, 1 - rightArea - leftArea, col = allCols[nLeftBars + 2], cex = 2)
}
# Add the cumulative probabilities above the bars
text(0:input$nFlips, densValues + yMax * 0.04, round(densValues, 3), col = allCols, cex = 1.2)
xVals >= nLeftBars
xVals <= nRightBars
xVals >= leftAbLineLoc & xVals <= rightAbLineLoc
xVals >= nLeftBars
input <- list(nFlips = 10 , decision = "Reject H0", theta = 0.5)
altHypothesis <- "Negative only"
# altHypothesis <- "Yes"
# Determine the critical regions based on the chosen alternative hypothesis
if (altHypothesis == "Yes") {
nLeftBars <- qbinom(halfAlpha, input$nFlips, nulTheta, lower.tail = TRUE)
nRightBars <- qbinom(halfAlpha, input$nFlips, nulTheta, lower.tail = FALSE)
leftArea <- round(pbinom(nLeftBars - 1, input$nFlips, input$theta), 3)
rightArea <- round(pbinom(input$nFlips - nLeftBars, input$nFlips, input$theta, lower.tail = FALSE), 3)
} else if (altHypothesis == "Positive only") {
nLeftBars <- 0
nRightBars <- qbinom(halfAlpha*2, input$nFlips, nulTheta, lower.tail = FALSE)
leftArea <- 0
rightArea <- round(pbinom(nRightBars, input$nFlips, input$theta, lower.tail = FALSE), 3)
} else if (altHypothesis == "Negative only") {
nLeftBars <- qbinom(halfAlpha*2, input$nFlips, nulTheta, lower.tail = TRUE)
nRightBars <- 0
leftArea <- round(pbinom(nLeftBars - 1, input$nFlips, input$theta), 3)
rightArea <- 0
}
leftAbLineLoc <- qbinom(halfAlpha, input$nFlips, nulTheta, lower.tail = TRUE) - 0.5
rightAbLineLoc <- qbinom(halfAlpha, input$nFlips, nulTheta, lower.tail = FALSE) + 0.5
xVals <- 0:input$nFlips
if (input$decision == "Nothing") {
allCols <- rep("darkgreen", input$nFlips+1)
} else if (input$decision == "Reject H0") {
allCols <- ifelse(xVals >= nLeftBars & xVals <= nRightBars, "darkgreen", "purple")
} else {
allCols <- ifelse(xVals >= leftAbLineLoc & xVals <= rightAbLineLoc, "purple", "darkgreen")
}
par(cex = 1.5, cex.lab = 1.6)
densValues <- dbinom(0:input$nFlips, input$nFlips, prob = input$theta)
yMax <- max(densValues) * 1.2
plot(0:input$nFlips, densValues,
col  = allCols,
type = "h",
lwd = 20,
las = 1,
ylab = "Probability",
xlab = "Number of 'Successes'",
ylim = c(0, yMax),
xlim = c(-1, input$nFlips + 1),
# yaxt = 'n',
main = 'Sampling Distribution'
)
if (input$decision != "Nothing") {
if (altHypothesis != "Positive only")
abline(v = leftAbLineLoc, lwd = 2, lty = 2)
if (altHypothesis != "Negative only")
abline(v = rightAbLineLoc, lwd = 2, lty = 2)
text(-0.5, yMax * 0.95, leftArea, col = allCols[1], cex = 2)
text(input$nFlips + 0.5, yMax * 0.95, rightArea, col = allCols[length(allCols)], cex = 2)
text(mean(c(leftAbLineLoc, rightAbLineLoc)), yMax * 0.95, 1 - rightArea - leftArea, col = allCols[nLeftBars + 2], cex = 2)
}
# Add the cumulative probabilities above the bars
text(0:input$nFlips, densValues + yMax * 0.04, round(densValues, 3), col = allCols, cex = 1.2)
input <- list(nFlips = 10 , decision = "Reject H0", theta = 0.5)
altHypothesis <- "Positive only"
# altHypothesis <- "Yes"
# Determine the critical regions based on the chosen alternative hypothesis
if (altHypothesis == "Yes") {
nLeftBars <- qbinom(halfAlpha, input$nFlips, nulTheta, lower.tail = TRUE)
nRightBars <- qbinom(halfAlpha, input$nFlips, nulTheta, lower.tail = FALSE)
leftArea <- round(pbinom(nLeftBars - 1, input$nFlips, input$theta), 3)
rightArea <- round(pbinom(input$nFlips - nLeftBars, input$nFlips, input$theta, lower.tail = FALSE), 3)
} else if (altHypothesis == "Positive only") {
nLeftBars <- 0
nRightBars <- qbinom(halfAlpha*2, input$nFlips, nulTheta, lower.tail = FALSE)
leftArea <- 0
rightArea <- round(pbinom(nRightBars, input$nFlips, input$theta, lower.tail = FALSE), 3)
} else if (altHypothesis == "Negative only") {
nLeftBars <- qbinom(halfAlpha*2, input$nFlips, nulTheta, lower.tail = TRUE)
nRightBars <- 0
leftArea <- round(pbinom(nLeftBars - 1, input$nFlips, input$theta), 3)
rightArea <- 0
}
leftAbLineLoc <- qbinom(halfAlpha, input$nFlips, nulTheta, lower.tail = TRUE) - 0.5
rightAbLineLoc <- qbinom(halfAlpha, input$nFlips, nulTheta, lower.tail = FALSE) + 0.5
xVals <- 0:input$nFlips
if (input$decision == "Nothing") {
allCols <- rep("darkgreen", input$nFlips+1)
} else if (input$decision == "Reject H0") {
allCols <- ifelse(xVals >= nLeftBars & xVals <= nRightBars, "darkgreen", "purple")
} else {
allCols <- ifelse(xVals >= leftAbLineLoc & xVals <= rightAbLineLoc, "purple", "darkgreen")
}
par(cex = 1.5, cex.lab = 1.6)
densValues <- dbinom(0:input$nFlips, input$nFlips, prob = input$theta)
yMax <- max(densValues) * 1.2
plot(0:input$nFlips, densValues,
col  = allCols,
type = "h",
lwd = 20,
las = 1,
ylab = "Probability",
xlab = "Number of 'Successes'",
ylim = c(0, yMax),
xlim = c(-1, input$nFlips + 1),
# yaxt = 'n',
main = 'Sampling Distribution'
)
if (input$decision != "Nothing") {
if (altHypothesis != "Positive only")
abline(v = leftAbLineLoc, lwd = 2, lty = 2)
if (altHypothesis != "Negative only")
abline(v = rightAbLineLoc, lwd = 2, lty = 2)
text(-0.5, yMax * 0.95, leftArea, col = allCols[1], cex = 2)
text(input$nFlips + 0.5, yMax * 0.95, rightArea, col = allCols[length(allCols)], cex = 2)
text(mean(c(leftAbLineLoc, rightAbLineLoc)), yMax * 0.95, 1 - rightArea - leftArea, col = allCols[nLeftBars + 2], cex = 2)
}
# Add the cumulative probabilities above the bars
text(0:input$nFlips, densValues + yMax * 0.04, round(densValues, 3), col = allCols, cex = 1.2)
xVals >= nLeftBars & xVals <= nRightBars
xVals <= nRightBars
xVals >= nLeftBars
nLeftBars
nRightBars
input <- list(nFlips = 10 , decision = "Reject H0", theta = 0.5)
altHypothesis <- "Negative only"
# altHypothesis <- "Yes"
# Determine the critical regions based on the chosen alternative hypothesis
if (altHypothesis == "Yes") {
nLeftBars <- qbinom(halfAlpha, input$nFlips, nulTheta, lower.tail = TRUE)
nRightBars <- qbinom(halfAlpha, input$nFlips, nulTheta, lower.tail = FALSE)
leftArea <- round(pbinom(nLeftBars - 1, input$nFlips, input$theta), 3)
rightArea <- round(pbinom(input$nFlips - nLeftBars, input$nFlips, input$theta, lower.tail = FALSE), 3)
} else if (altHypothesis == "Positive only") {
nLeftBars <- 0
nRightBars <- qbinom(halfAlpha*2, input$nFlips, nulTheta, lower.tail = FALSE)
leftArea <- 0
rightArea <- round(pbinom(nRightBars, input$nFlips, input$theta, lower.tail = FALSE), 3)
} else if (altHypothesis == "Negative only") {
nLeftBars <- qbinom(halfAlpha*2, input$nFlips, nulTheta, lower.tail = TRUE)
nRightBars <- 0
leftArea <- round(pbinom(nLeftBars - 1, input$nFlips, input$theta), 3)
rightArea <- 0
}
leftAbLineLoc <- qbinom(halfAlpha, input$nFlips, nulTheta, lower.tail = TRUE) - 0.5
rightAbLineLoc <- qbinom(halfAlpha, input$nFlips, nulTheta, lower.tail = FALSE) + 0.5
xVals <- 0:input$nFlips
if (input$decision == "Nothing") {
allCols <- rep("darkgreen", input$nFlips+1)
} else if (input$decision == "Reject H0") {
allCols <- ifelse(xVals >= nLeftBars & xVals <= nRightBars, "darkgreen", "purple")
} else {
allCols <- ifelse(xVals >= leftAbLineLoc & xVals <= rightAbLineLoc, "purple", "darkgreen")
}
par(cex = 1.5, cex.lab = 1.6)
densValues <- dbinom(0:input$nFlips, input$nFlips, prob = input$theta)
yMax <- max(densValues) * 1.2
plot(0:input$nFlips, densValues,
col  = allCols,
type = "h",
lwd = 20,
las = 1,
ylab = "Probability",
xlab = "Number of 'Successes'",
ylim = c(0, yMax),
xlim = c(-1, input$nFlips + 1),
# yaxt = 'n',
main = 'Sampling Distribution'
)
if (input$decision != "Nothing") {
if (altHypothesis != "Positive only")
abline(v = leftAbLineLoc, lwd = 2, lty = 2)
if (altHypothesis != "Negative only")
abline(v = rightAbLineLoc, lwd = 2, lty = 2)
text(-0.5, yMax * 0.95, leftArea, col = allCols[1], cex = 2)
text(input$nFlips + 0.5, yMax * 0.95, rightArea, col = allCols[length(allCols)], cex = 2)
text(mean(c(leftAbLineLoc, rightAbLineLoc)), yMax * 0.95, 1 - rightArea - leftArea, col = allCols[nLeftBars + 2], cex = 2)
}
# Add the cumulative probabilities above the bars
text(0:input$nFlips, densValues + yMax * 0.04, round(densValues, 3), col = allCols, cex = 1.2)
nLeftBars
nRightBars
input <- list(nFlips = 10 , decision = "Reject H0", theta = 0.5)
altHypothesis <- "Negative only"
# altHypothesis <- "Yes"
# Determine the critical regions based on the chosen alternative hypothesis
if (altHypothesis == "Yes") {
nLeftBars <- qbinom(halfAlpha, input$nFlips, nulTheta, lower.tail = TRUE)
nRightBars <- qbinom(halfAlpha, input$nFlips, nulTheta, lower.tail = FALSE)
leftArea <- round(pbinom(nLeftBars - 1, input$nFlips, input$theta), 3)
rightArea <- round(pbinom(input$nFlips - nLeftBars, input$nFlips, input$theta, lower.tail = FALSE), 3)
} else if (altHypothesis == "Positive only") {
nLeftBars <- 0
nRightBars <- qbinom(halfAlpha*2, input$nFlips, nulTheta, lower.tail = FALSE)
leftArea <- 0
rightArea <- round(pbinom(nRightBars, input$nFlips, input$theta, lower.tail = FALSE), 3)
} else if (altHypothesis == "Negative only") {
nLeftBars <- qbinom(halfAlpha*2, input$nFlips, nulTheta, lower.tail = TRUE)
nRightBars <- 0
leftArea <- round(pbinom(nLeftBars - 1, input$nFlips, input$theta), 3)
rightArea <- 0
}
leftAbLineLoc <- qbinom(halfAlpha, input$nFlips, nulTheta, lower.tail = TRUE) - 0.5
rightAbLineLoc <- qbinom(halfAlpha, input$nFlips, nulTheta, lower.tail = FALSE) + 0.5
xVals <- 0:input$nFlips
if (input$decision == "Nothing") {
allCols <- rep("darkgreen", input$nFlips+1)
} else if (input$decision == "Reject H0") {
allCols <- ifelse(xVals >= nLeftBars & xVals <= nRightBars, "darkgreen", "purple")
if (altHypothesis == "Negative only")
allCols <- ifelse(xVals >= nLeftBars, "darkgreen", "purple")
} else {
allCols <- ifelse(xVals >= leftAbLineLoc & xVals <= rightAbLineLoc, "purple", "darkgreen")
}
par(cex = 1.5, cex.lab = 1.6)
densValues <- dbinom(0:input$nFlips, input$nFlips, prob = input$theta)
yMax <- max(densValues) * 1.2
plot(0:input$nFlips, densValues,
col  = allCols,
type = "h",
lwd = 20,
las = 1,
ylab = "Probability",
xlab = "Number of 'Successes'",
ylim = c(0, yMax),
xlim = c(-1, input$nFlips + 1),
# yaxt = 'n',
main = 'Sampling Distribution'
)
if (input$decision != "Nothing") {
if (altHypothesis != "Positive only")
abline(v = leftAbLineLoc, lwd = 2, lty = 2)
if (altHypothesis != "Negative only")
abline(v = rightAbLineLoc, lwd = 2, lty = 2)
text(-0.5, yMax * 0.95, leftArea, col = allCols[1], cex = 2)
text(input$nFlips + 0.5, yMax * 0.95, rightArea, col = allCols[length(allCols)], cex = 2)
text(mean(c(leftAbLineLoc, rightAbLineLoc)), yMax * 0.95, 1 - rightArea - leftArea, col = allCols[nLeftBars + 2], cex = 2)
}
# Add the cumulative probabilities above the bars
text(0:input$nFlips, densValues + yMax * 0.04, round(densValues, 3), col = allCols, cex = 1.2)
runApp('~/GitHubStuff/ShinyApps/ShinyApps/NHST_Binomial/app-twosided.R')
leftAbLineLoc
rightAbLineLoc
runApp('~/GitHubStuff/ShinyApps/ShinyApps/NHST_Binomial/app-twosided.R')
runApp('~/GitHubStuff/ShinyApps/ShinyApps/NHST_Binomial')
runApp('~/GitHubStuff/ShinyApps/ShinyApps/NHST_Binomial')
0.109 + ﻿0.031 + ﻿0.004
0.109 + 0.031 + 0.004
